name: Jira Issues into Markdown
description: Jira Action to obtain data from Issues and pass it to markdown
author: iamigui

branding:
  color: black
  icon: play-circle

inputs:
  branch_name:
    description: Branch name
    required: true
    default: ""
  jira_data:
    description: Jira Data
    required: true
    default: ""

outputs:
  release_content:
    description: Release notes file
    value: ${{ steps.set_outputs.outputs.release_content }}

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Mask secrets
      id: mask_secrets
      uses: actions/github-script@v7
      with:
        script: |
          const jira_data = `${{ inputs.jira_data }}` || '{}';
            
          const data = JSON.parse(jira_data);

          try {
            core.setSecret(data.api_token);
            core.setSecret(data.email);
            core.setSecret(data.domain);
            core.setSecret(data.project_key);
          } catch (error) {
            core.setFailed(`'jira_data' should be a valid JSON`)
          }

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: Install dependencies
      shell: bash
      run: npm ci

    - name: Lint
      shell: bash
      run: npm run lint

    - name: Build
      shell: bash
      run: npm run build

    - name: Run Jira Tasks Action
      shell: bash
      run: |
        npm install -g typescript
        tsc src/index.ts
        node src/index.js
      env:
        BRANCH_NAME: ${{ inputs.branch_name }}
        JIRA_API_TOKEN: ${{ fromJSON(inputs.jira_data).api_token }}
        JIRA_EMAIL: ${{ fromJSON(inputs.jira_data).email }}
        JIRA_DOMAIN: ${{ fromJSON(inputs.jira_data).domain }}
        JIRA_PROJECT_KEY: ${{ fromJSON(inputs.jira_data).project_key }}

    - name: Set Outputs
      id: set_outputs
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const releaseFileContent = fs.readFileSync('RELEASE_NOTES.md', 'utf-8')

          core.setOutput('release_content', releaseFileContent)
